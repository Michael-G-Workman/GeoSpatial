@model GeoSpatial.Models.GeoTest

@{
    ViewBag.Title = "Locations";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Locations</h2>
<p>
    Enter a Source Location Name, Latitude, and Longitude in decimal format,
    then find the distances to Cocoa Beach and Central Florida locations.
    Using Google Maps can give you the Latitude and Longitude coordinates for your source location.
</p>

@* Form for Create New Source Location *@
<div class="form-horizontal">
    <h4>Source Location</h4>

    <form method="post" id="FindDistancesForm" action="/Home/Locations">
        <hr />
        @Html.AntiForgeryToken()

        @* Location *@
        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @id = "Location", @maxlength = "100", @class = "form-control" } })
            </div>
        </div>

        @* Latitude *@
        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @id = "Latitude", @maxlength = "50", @class = "form-control" } })
            </div>
        </div>

        @* Longitude *@
        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @id = "Longitude", @maxlength = "50", @class = "form-control" } })
            </div>
        </div>

        @* Form Submit Button *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="FindBTN" type="button" value="Find" class="btn btn-primary">Find Distances</button>
            </div>
        </div>

    </form>


</div>

<br />
<br />
<br />

@* JQuery Code for Form Validation *@
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            $("#FindBTN").click(function () {

                // clear previous errors
                $(".error").remove();

                // sentinel value whether or not to submit form
                var formValidated = true;

                // vars for our form elements
                var location = $("#Location");
                var latitude = $("#Latitude");
                var longitude = $("#Longitude");

                // Location
                if (location.val().trim() == "") {
                    formValidated = false;
                    location.after("<span class='error text-danger'>Location Required</span>");
                }

                // Latitude - test for empty string
                if (latitude.val().trim() == "") {
                    formValidated = false;
                    latitude.after("<span class='error text-danger'>Latitude Required</span>");
                }

                // Latitude - test for valid number
                else if (isNaN(latitude.val())) {
                    formValidated = false;
                    latitude.after("<span class='error text-danger'>Latitude Not a Number</span>");
                }

                // Latitude - test for valid range, -90 to +90
                else if ((latitude.val() > 90) || (latitude.val() < -90)) {
                    formValidated = false;
                    latitude.after("<span class='error text-danger'>" +
                        "Latitude Invalid Range, Less than - 90 or Greater than + 90" +
                        "</span>");
                }

                // Longitude - test for empty string
                if (longitude.val().trim() == "") {
                    formValidated = false;
                    longitude.after("<span class='error text-danger'>Longitude Required</span>");
                }

                // Longitude - test for valid number
                else if (isNaN(longitude.val())) { 
                    formValidated = false;
                    longitude.after("<span class='error text-danger'>Longitude Not a Number</span>");
                }

                // Longitude - test for valid range, -180 to +180
                else if ((longitude.val() > 180) || (longitude.val() < -180)) { 
                    formValidated = false;
                    longitude.after("<span class='error text-danger'>" +
                        "Longitude Invalid Range, Less than - 180 or Greater than + 180" +
                        "</span>");
                }

                // submit form if no errors
                if (formValidated) {
                    $(".error").remove();
                    $("#FindDistancesForm").submit();
                }

            });
        });
    </script>
}

